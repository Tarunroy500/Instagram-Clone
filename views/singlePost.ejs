<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="../stylesheets/singlePost.css" />
    <title>Document</title>
  </head>
  <body>
    <div class="main">
      <div class="nav">
        <a href="javascript: history.go(-1)"><i class="ri-arrow-left-line"></i></a>
      </div>
      <div class="reel-container"></div>
    </div>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.3.6/axios.min.js"
      integrity="sha512-06NZg89vaTNvnFgFTqi/dJKFadQ6FIglD6Yg1HHWAUtVFFoXli9BZL4q4EO1UTKpOfCfW5ws2Z6gw49Swsilsg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
    <script>
      function timeAgo(input) {
        const date = input instanceof Date ? input : new Date(input);
        const formatter = new Intl.RelativeTimeFormat("en");
        const ranges = {
          years: 3600 * 24 * 365,
          months: 3600 * 24 * 30,
          weeks: 3600 * 24 * 7,
          days: 3600 * 24,
          hours: 3600,
          minutes: 60,
          seconds: 1,
        };
        const secondsElapsed = (date.getTime() - Date.now()) / 1000;
        for (let key in ranges) {
          if (ranges[key] < Math.abs(secondsElapsed)) {
            const delta = secondsElapsed / ranges[key];
            return formatter.format(Math.round(delta), key);
          }
        }
      }
      var cont = document.querySelector(".reel-container");
      var count = 0;
      var single_post = "<%=post._id%>";
      const loadPosts = async function () {
        try {
          const res = await axios.get(`/post/<%=post._id%>`);
          user = res.data.user;
          handle(res.data.post, user);
        } catch (error) {
          console.error("Error loading posts:", error);
        }
      };

      loadPosts();

      var temp = "";
      const handle = (post, user) => {
        temp = ` <div class="reel-section" id="reel-sec">
    <div class="reel-vdo">
      ${
        post.filetype == "video"
          ? `<video loop autoplay controls src="${post.file}"></video>`
          : `<img src="${post.file}" alt="" />`
      }
    </div>
    <div class="profile">
      <a href="/profile/${post.author._id}">
        <div class="reel-img">
          <img src="${post.author.profile_picture}" alt="" />
        </div>
        <h4>${post.author.fullName}</h4>
      </a>
      ${
        user._id !== post.author._id
          ? post.author.followers.includes(user._id)
            ? `<a href="/follow/${post.author._id}"><button>Unfollow</button></a>`
            : `<a href="/follow/${post.author._id}"><button>Follow</button></a>`
          : ``
      }
    </div>
    <div class="feature-icons">
      <div class="heart" id="${post._id}">
        ${
          post.likes.includes(user._id)
            ? `<i class="ri-heart-fill heart" id="${post._id}" style="color: red"></i>`
            : `<i class="ri-heart-line heart" id="${post._id}"></i>`
        }
      </div>
      <div id="${post._id}" class="cmt comment">
        <i id="${post._id}" class="ri-chat-3-line comment"></i>
      </div>
      <div class="share">
        <a target="_blank" href="http://web.whatsapp.com/send?text=http://localhost:3000/singlepost/${
          post._id
        }"><i class="ri-share-forward-line"></i></a>
      </div>
      <div class="bookmark" id="${post._id}">
        ${
          user.bookmarks.includes(post._id)
            ? `<i id="${post._id}" class="ri-bookmark-fill" style="color:black" ></i>`
            : `<i id="${post._id}" class="ri-bookmark-line" ></i>`
        }
      </div>
      <div class="menu">
        <i class="ri-more-line"></i>
      </div>
      <div class="profile"></div>
    </div>
  </div>
  <div class="comments">
    <div class="comment-nav">
      <h2> ${post.comments.length} Comments</h2>
      <div class="add-cmt"><i class="fas fa-plus"></i> Add Comment</div>
    </div>
    <div class="main-comments">
      ${post.comments
        .map(
          (comment) => `
          <div class="comment">
            <div class="comment-header">
              <img src="${comment.author.profile_picture}" alt="Avatar" />
              </div>
              
            <div class="comment-body">
              
              <strong>${comment.author.fullName}:</strong>
              ${comment.comment}
              ${
                comment.author._id.toString() == user?._id.toString()|| user._id.toString() == post.author._id.toString()
                  ? `<a class="dlt-cmt" href="/deletecomment/${post._id}/${comment._id}">
                    <i class="ri-delete-bin-line"></i>
                    </a>`: ``
              }
              <h6>${ timeAgo(comment.time) ? timeAgo(comment.time) : "1 second ago"}</h6>
            </div>
          </div>
        `
        )
        .join("")}
    </div>
    <form
      action="/comment/${post._id}"
      method="post"
      class="comment-footer"
    >
      <input
        type="text"
        name="comment"
        id="comment"
        class="single-comment"
        placeholder="Add a comment"
      />
      <button type="submit">Comment</button>
    </form>
  </div>
  `;
        cont.innerHTML = temp;
      };

      // console.log();
      document
        .querySelector(".reel-container")
        .addEventListener("click", async (e) => {
          if (e.target.classList.contains("heart")) {
            const res = await axios.get(`/like/${single_post}`);
            loadPosts();
            // handle(res.data.post);
          } else if (e.target.classList.contains("comment")) {
            // console.log(e.target.id);
            // const res = await axios.get(`/post/${e.target.id}`);
            // // console.log(res.data.post.comments);
            // let html;
            // document.querySelector(".reel-container").innerHTML+=`
            //             <form action="/comment/${res.data.post._id}" method="POST">
            //               <input name="comment" placeholder="Add comment" required></input>
            //               <button type="submit">Comment</button>
            //             </form>`
            // if (res.data.post.comments.length > 0) {
            //   const commentsHtml = res.data.post.comments
            //     .map(
            //       (comment) => `
            //         <a href="/profile/${comment.author._id}">
            //           <div class="reel-img">
            //             <img src="${comment.author.profile_picture}" alt="">
            //           </div>
            //           <h4>${comment.author.fullName}</h4>
            //         </a>
            //         <h4>${comment.comment}</h4>
            //         <h5><a href="/deletecomment/${res.data.post._id}/${comment._id}">‚ùå</a></h5>
            //       `
            //     )
            //     .join("");
            //   html = `<div class="comments">${commentsHtml}</div>`;
            // } else {
            //   html = `<div class="comments">
            //             <h5>No comments</h5>
            //           </div>`;
            // }
            // document.querySelector(".reel-container").innerHTML += html;
          } else if (
            e.target.classList.contains("ri-bookmark-line") ||
            e.target.classList.contains("ri-bookmark-fill")
          ) {
            // console.log(e.target.id);
            const res = await axios.get(`/bookmark-post/${e.target.id}`);
            loadPosts();
          }
        });
    </script>
  </body>
</html>
